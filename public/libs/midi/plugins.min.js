if (function (a) {
    "use strict";
    window.Audio && function () {
      for (var b = a.AudioTag = {
          api: "audiotag"
        }, c = {}, d = 127, e = -1, f = [], g = [], h = {}, i = 0; i < 12; i++) f[i] = new Audio;
      var j = function (b, c) {
          if (a.channels[b]) {
            var i = a.channels[b].instrument,
              j = a.GM.byId[i].id,
              c = h[c];
            if (c) {
              var k = j + "" + c.id,
                l = (e + 1) % f.length,
                m = f[l];
              if (g[l] = k, !a.Soundfont[j]) return void(a.DEBUG && console.log("404", j));
              m.src = a.Soundfont[j][c.id], m.volume = d / 127, m.play(), e = l
            }
          }
        },
        k = function (b, c) {
          if (a.channels[b]) {
            var d = a.channels[b].instrument,
              i = a.GM.byId[d].id,
              c = h[c];
            if (c)
              for (var j = i + "" + c.id, k = 0, l = f.length; k < l; k++) {
                var m = (k + e + 1) % l,
                  n = g[m];
                if (n && n == j) return f[m].pause(), void(g[m] = null)
              }
          }
        };
      b.audioBuffers = f, b.send = function (a, b) {}, b.setController = function (a, b, c, d) {}, b.setVolume = function (a, b) {
        d = b
      }, b.programChange = function (b, c) {
        a.channels[b].instrument = c
      }, b.pitchBend = function (a, b, c) {}, b.noteOn = function (a, b, d, e) {
        var f = c[b];
        if (h[f]) return e ? setTimeout(function () {
          j(a, f)
        }, 1e3 * e) : void j(a, f)
      }, b.noteOff = function (a, b, c) {}, b.chordOn = function (a, b, d, e) {
        for (var f = 0; f < b.length; f++) {
          var g = b[f],
            i = c[g];
          if (h[i]) {
            if (e) return setTimeout(function () {
              j(a, i)
            }, 1e3 * e);
            j(a, i)
          }
        }
      }, b.chordOff = function (a, b, d) {
        for (var e = 0; e < b.length; e++) {
          var f = b[e],
            g = c[f];
          if (h[g]) {
            if (d) return setTimeout(function () {
              k(a, g)
            }, 1e3 * d);
            k(a, g)
          }
        }
      }, b.stopAllNotes = function () {
        for (var a = 0, b = f.length; a < b; a++) f[a].pause()
      }, b.connect = function (d) {
        a.setDefaultPlugin(b);
        for (var e in a.keyToNote) c[a.keyToNote[e]] = e, h[e] = {
          id: e
        };
        d.onsuccess && d.onsuccess()
      }
    }()
  }(MIDI), function (a) {
    "use strict";
    window.AudioContext && function () {
      function j(a, b, d) {
        if (c) {
          var f = new Audio;
          f.src = a, f.controls = !1, f.autoplay = !1, f.preload = !1, f.addEventListener("canplay", function () {
            b && b(f)
          }), f.addEventListener("error", function (a) {
            d && d(a)
          }), document.body.appendChild(f)
        } else if (0 === a.indexOf("data:audio")) {
          var g = a.split(",")[1],
            h = Base64Binary.decodeArrayBuffer(g);
          e.decodeAudioData(h, b, d)
        } else {
          var i = new XMLHttpRequest;
          i.open("GET", a, !0), i.responseType = "arraybuffer", i.onload = function () {
            e.decodeAudioData(i.response, b, d)
          }, i.send()
        }
      }

      function k() {
        return new(window.AudioContext || window.webkitAudioContext)
      }
      var e, c = !1,
        d = a.WebAudio = {
          api: "webaudio"
        },
        f = {},
        g = {},
        h = 127,
        i = {};
      d.audioBuffers = i, d.send = function (a, b) {}, d.setController = function (a, b, c, d) {}, d.setVolume = function (a, b, c) {
        c ? setTimeout(function () {
          h = b
        }, 1e3 * c) : h = b
      }, d.programChange = function (b, c, d) {
        var e = a.channels[b];
        e.instrument = c
      }, d.pitchBend = function (b, c, d) {
        var e = a.channels[b];
        e.pitchBend = c
      }, d.noteOn = function (b, d, j, k) {
        k = k || 0;
        var l = a.channels[b],
          m = l.instrument,
          n = m + "" + d,
          o = i[n];
        if (o) {
          if (k < e.currentTime && (k += e.currentTime), c) var p = e.createMediaElementSource(o);
          else {
            var p = e.createBufferSource();
            p.buffer = o
          }
          if (g) {
            var q = p;
            for (var r in g) q.connect(g[r].input), q = g[r]
          }
          var s = j / 127 * (h / 127) * 2 - 1;
          if (p.connect(e.destination), p.playbackRate.value = 1, p.gainNode = e.createGain(), p.gainNode.connect(e.destination), p.gainNode.gain.value = Math.min(1, Math.max(-1, s)), p.connect(p.gainNode), c) {
            if (k) return setTimeout(function () {
              o.currentTime = 0, o.play()
            }, 1e3 * k);
            o.currentTime = 0, o.play()
          } else p.start(k || 0);
          return f[b + "" + d] = p, p
        }
      }, d.noteOff = function (b, d, g) {
        g = g || 0;
        var h = a.channels[b],
          j = h.instrument,
          k = j + "" + d,
          l = i[k];
        if (l) {
          g < e.currentTime && (g += e.currentTime);
          var m = f[b + "" + d];
          if (m) {
            if (m.gainNode) {
              var n = m.gainNode.gain;
              n.linearRampToValueAtTime(n.value, g), n.linearRampToValueAtTime(-1, g + .3)
            }
            return c ? g ? setTimeout(function () {
              l.pause()
            }, 1e3 * g) : l.pause() : m.noteOff ? m.noteOff(g + .5) : m.stop(g + .5), delete f[b + "" + d], m
          }
        }
      }, d.chordOn = function (a, b, c, e) {
        for (var h, f = {}, g = 0, i = b.length; g < i; g++) f[h = b[g]] = d.noteOn(a, h, c, e);
        return f
      }, d.chordOff = function (a, b, c) {
        for (var g, e = {}, f = 0, h = b.length; f < h; f++) e[g = b[f]] = d.noteOff(a, g, c);
        return e
      }, d.stopAllNotes = function () {
        for (var a in f) {
          var b = 0;
          b < e.currentTime && (b += e.currentTime);
          var c = f[a];
          c.gain.linearRampToValueAtTime(1, b), c.gain.linearRampToValueAtTime(0, b + .3), c.noteOff ? c.noteOff(b + .3) : c.stop(b + .3), delete f[a]
        }
      }, d.setEffects = function (a) {
        if (!e.tunajs) return console.log("Effects module not installed.");
        for (var b = 0; b < a.length; b++) {
          var c = a[b],
            d = new e.tunajs[c.type](c);
          d.connect(e.destination), g[c.type] = d
        }
      }, d.connect = function (b) {
        a.setDefaultPlugin(d), d.setContext(e || k(), b.onsuccess)
      }, d.getContext = function () {
        return e
      }, d.setContext = function (b, c, d, f) {
        e = b, "undefined" == typeof Tuna || e.tunajs || (e.tunajs = new Tuna(e));
        var g = [],
          h = a.keyToNote;
        for (var k in h) g.push(k);
        var l = function (a) {
            for (var b in n)
              if (n[b]) return;
            c && (c(), c = null)
          },
          m = function (b, c, d, e) {
            var f = b[e];
            f && (n[c]++, j(f, function (f) {
              f.id = e;
              var g = a.keyToNote[e];
              if (i[c + "" + g] = f, 0 === --n[c]) {
                b.isLoaded = !0, l(o)
              }
            }, function (a) {}))
          },
          n = {};
        for (var o in a.Soundfont) {
          var p = a.Soundfont[o];
          if (!p.isLoaded) {
            var q = a.GM.byName[o],
              r = q.number;
            n[r] = 0;
            for (var s = 0; s < g.length; s++) {
              var k = g[s];
              m(p, r, s, k)
            }
          }
        }
        setTimeout(l, 1)
      }
    }()
  }(MIDI), function (a) {
    "use strict";
    var b = null,
      c = null,
      e = a.WebMIDI = {
        api: "webmidi"
      };
    e.send = function (a, b) {
      c.send(a, 1e3 * b)
    }, e.setController = function (a, b, d, e) {
      c.send([a, b, d], 1e3 * e)
    }, e.setVolume = function (a, b, d) {
      c.send([176 + a, 7, b], 1e3 * d)
    }, e.programChange = function (a, b, d) {
      c.send([192 + a, b], 1e3 * d)
    }, e.pitchBend = function (a, b, d) {
      c.send([224 + a, b], 1e3 * d)
    }, e.noteOn = function (a, b, d, e) {
      c.send([144 + a, b, d], 1e3 * e)
    }, e.noteOff = function (a, b, d) {
      c.send([128 + a, b, 0], 1e3 * d)
    }, e.chordOn = function (a, b, d, e) {
      for (var f = 0; f < b.length; f++) {
        var g = b[f];
        c.send([144 + a, g, d], 1e3 * e)
      }
    }, e.chordOff = function (a, b, d) {
      for (var e = 0; e < b.length; e++) {
        var f = b[e];
        c.send([128 + a, f, 0], 1e3 * d)
      }
    }, e.stopAllNotes = function () {
      c.cancel();
      for (var a = 0; a < 16; a++) c.send([176 + a, 123, 0])
    }, e.connect = function (d) {
      a.setDefaultPlugin(e);
      var f = function (b) {
        if (window.AudioContext) d.api = "webaudio";
        else {
          if (!window.Audio) return;
          d.api = "audiotag"
        }
        a.loadPlugin(d)
      };
      navigator.requestMIDIAccess().then(function (a) {
        b = a;
        var e = b.outputs;
        c = "function" == typeof e ? e()[0] : e[0], void 0 === c ? f() : d.onsuccess && d.onsuccess()
      }, f)
    }
  }(MIDI), "undefined" == typeof MIDI && (MIDI = {}), function (a) {
    var b = a.util || (a.util = {});
    if (b.request = function (b, d, e, f) {
        "use strict";
        "string" == typeof b && (b = {
          url: b
        });
        var g = b.data,
          h = b.url,
          i = b.method || (b.data ? "POST" : "GET"),
          j = b.format,
          k = b.headers,
          l = b.responseType,
          m = b.withCredentials || !1,
          d = d || b.onsuccess,
          e = e || b.onerror,
          f = f || b.onprogress;
        if ("undefined" != typeof c && a.loc.isLocalUrl(h)) return void c.readFile(h, "utf8", function (a, b) {
          a ? e && e(a) : d && d({
            responseText: b
          })
        });
        var n = new XMLHttpRequest;
        if (n.open(i, h, !0), k)
          for (var o in k) n.setRequestHeader(o, k[o]);
        else g && n.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        return "binary" === j && n.overrideMimeType && n.overrideMimeType("text/plain; charset=x-user-defined"), l && (n.responseType = l), m && (n.withCredentials = "true"), e && "onerror" in n && (n.onerror = e), f && n.upload && "onprogress" in n.upload && (g ? n.upload.onprogress = function (a) {
          f.call(n, a, event.loaded / event.total)
        } : n.addEventListener("progress", function (a) {
          var b = 0;
          if (a.lengthComputable) b = a.total;
          else if (n.totalBytes) b = n.totalBytes;
          else {
            var c = parseInt(n.getResponseHeader("Content-Length-Raw"));
            if (!isFinite(c)) return;
            n.totalBytes = b = c
          }
          f.call(n, a, a.loaded / b)
        })), n.onreadystatechange = function (b) {
          if (4 === n.readyState)
            if (200 === n.status || 304 === n.status || 308 === n.status || 0 === n.status && a.client.cordova) {
              if (d) {
                var c;
                if ("xml" === j) c = b.target.responseXML;
                else if ("text" === j) c = b.target.responseText;
                else if ("json" === j) try {
                  c = JSON.parse(b.target.response)
                } catch (a) {
                  e && e.call(n, b)
                }
                d.call(n, b, c)
              }
            } else e && e.call(n, b)
        }, n.send(g), n
      }, "undefined" != typeof module && module.exports) {
      var c = require("fs");
      XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest, module.exports = a.util.request
    }
  }(MIDI), "undefined" == typeof dom) var dom = {};
! function () {
  "use strict";
  dom.loadScript = function () {
    return this.loaded = {}, this.loading = {}, this
  }, dom.loadScript.prototype.add = function (b) {
    var c = this;
    "string" == typeof b && (b = {
      url: b
    });
    var d = b.urls;
    "undefined" == typeof d && (d = [{
      url: b.url,
      verify: b.verify
    }]);
    var e = document.getElementsByTagName("head")[0],
      f = function (b, d) {
        c.loaded[b.url] || d && a(d) === !1 || (c.loaded[b.url] = !0, c.loading[b.url] && c.loading[b.url](), delete c.loading[b.url], b.onsuccess && b.onsuccess(), "undefined" != typeof m && m())
      },
      g = !1,
      h = [],
      i = function (a) {
        if ("string" == typeof a && (a = {
            url: a,
            verify: b.verify
          }), /([\w\d.\[\]\'\"])$/.test(a.verify)) {
          var d = a.test = a.verify;
          if ("object" == typeof d)
            for (var i = 0; i < d.length; i++) h.push(d[i]);
          else h.push(d)
        }
        if (!c.loaded[a.url]) {
          var k = document.createElement("script");
          k.onreadystatechange = function () {
            "loaded" !== this.readyState && "complete" !== this.readyState || f(a)
          }, k.onload = function () {
            f(a)
          }, k.onerror = function () {
            if (g = !0, delete c.loading[a.url], "object" == typeof a.test)
              for (var b in a.test) j(a.test[b]);
            else j(a.test)
          }, k.setAttribute("type", "text/javascript"), k.setAttribute("src", a.url), e.appendChild(k), c.loading[a.url] = function () {}
        }
      },
      j = function (a) {
        for (var b = [], c = 0; c < h.length; c++) h[c] !== a && b.push(h[c]);
        h = b
      },
      k = function (c) {
        if (c) f(c, c.test);
        else
          for (var e = 0; e < d.length; e++) f(d[e], d[e].test);
        for (var i = !0, e = 0; e < h.length; e++) a(h[e]) === !1 && (i = !1);
        !b.strictOrder && i ? g ? b.error && b.error() : b.onsuccess && b.onsuccess() : setTimeout(function () {
          k(c)
        }, 10)
      };
    if (b.strictOrder) {
      var l = -1,
        m = function () {
          if (l++, d[l]) {
            var a = d[l],
              e = a.url;
            c.loading[e] ? c.loading[e] = function () {
              a.onsuccess && a.onsuccess(), m()
            } : c.loaded[e] ? m() : (i(a), k(a))
          } else g ? b.error && b.error() : b.onsuccess && b.onsuccess()
        };
      m()
    } else
      for (var l = 0; l < d.length; l++) i(d[l]), k(d[l])
  }, dom.loadScript = new dom.loadScript;
  var a = function (a, b) {
    try {
      a = a.split('"').join("").split("'").join("").split("]").join("").split("[").join(".");
      for (var c = a.split("."), d = c.length, e = b || window, f = 0; f < d; f++) {
        var g = c[f];
        if (null == e[g]) return !1;
        e = e[g]
      }
      return !0
    } catch (a) {
      return !1
    }
  }
}(), "undefined" != typeof module && module.exports && (module.exports = dom.loadScript);